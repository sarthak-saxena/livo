import { SdkAPIConfig } from "../../types/Voxeet";
import { Attendee, Room } from "../../types/Conference";
import { JoinOptions } from "@voxeet/voxeet-web-sdk/types/models/Options";
import Conference from "@voxeet/voxeet-web-sdk/types/models/Conference";
import { Participant } from "@voxeet/voxeet-web-sdk/types/models/Participant";
export declare const initializeVoxeet: (config: SdkAPIConfig, creator: Attendee, room: Room) => Promise<Conference | undefined>;
export declare const purgeVoxeetSession: () => Promise<void>;
export declare const purgeVoxeetConference: () => Promise<void>;
export declare const createConference: (room: Room, joinInfo?: JoinOptions) => Promise<Conference>;
export declare const joinConference: (conferenceId: string, joinOptions: JoinOptions) => Promise<Conference>;
export declare const toggleMuteAttendee: (participant?: Participant, muted?: boolean) => void;
export declare const isAttendeeMuted: () => boolean;
export declare const requestConferenceSpeakerAccess: () => void;
export declare const grantConferenceSpeakerAccess: (attendeeId: string) => void;
export declare const revokeConferenceSpeakerAccess: (attendeeId: string) => void;
export declare const denyConferenceSpeakerAccess: (attendeeId: string) => void;
export declare const raiseHandInConference: (attendeeId: string) => void;
export declare const invokeMuteAttendeeCommand: (attendeeId: string) => void;
export declare const invokeUnMuteAttendeeCommand: (attendeeId: string) => void;
export declare const unRaiseHandInConference: (attendeeId: string) => void;
export declare const requestDataSync: (attendeeId: string) => void;
export declare const responseDataSync: (attendeeId: string, strngifiedResponse: string) => void;
export declare const addEventlistenersForCommanding: (isConferenceCreator?: boolean) => void;
export declare const getVoxeetSessionParticipantId: () => string;
